Exercise 1: Simple GET request
Show nearby dog parks with GET request from Google URL
1. Select the anchor tag with id dog-parks and assign it a variable.
2. Set the href property of the anchor tag to the DogParkMap URL, plus your neighborhood, and the keywords: "dog parks" 
3. Test the hyperlink, do parks around your area show up?

Exercise 2: Use fetch() to get a response from the dog API
1. Create an async function called fetchDog.
2. Inside fetchDog, add a try...catch block.
3. Inside try, create a variable called response with the value await fetch(), pass fetch the dogApi. Log response in the console.
4. Inside catch, console any error.
5. Call the function. 

Exercise 3: Exploring status codes
1. Inside try, log response.status in the console. 

Exercise 4: Convert the API response to JSON
1. Inside fetchDog(), inside try: return response.json(); Make sure to use the await operator
2. Outside the function, remove the previous function call
3. Create a variable with the function call as value, and log it in the console

Exercise 5: Showing the dog on the page
1. Create another async function called showDog.
2. Inside showDog, create a variable called dog with value await fetchDog().
3. Log dog in the console.
4. Set the src value of dogPic to the url. 
5. Call the showDog function. 
Activating the fetch button
6. Add a click event listener to the fetch button to call showDog 

Exercise 6: Authentication and params
The dog API requires some security in order to access dogs by breeds, which will be part of the Practice Session.
1. Navigate to: https://thedogapi.com/ 
Click Get Your API key, select the free account and follow the prompts
2. Copy and paste your API key as the value for the provided variable
3. Create an object called params with 2 keys: method, headers
Set the value of method to GET
Set the value of headers to an object as shown. Paste the apiKey variable as the value of x-api-key
4. Inside fetchDog(), inside try:
Add params as the second argument to fetch


======================== Practice Session ======================

Showing and populating the breed selection drop down.
1. Uncomment the label and select tags
2. Create 2 new async functions, fetchBreeds and showBreeds 
3. Inside fetchbreeds, use a try...catch block as before, and have it return the list of breeds in JSON
Make sure to include params as second argument to fetch()
let response = await fetch(breedsApi, params)
4. Inside showBreeds, use forEach() to loop through and show each breed in an option tag inside the select tag. Set the value property of each option tag to the breed id

Editing fetchDog to get a dog by breed
1. Inside the fetchDog function, create variable called breed, set its value to the value of the selected breed. 
2. Edit the first argument of fetch() to dogByBreedApi + breed
3. Add params as the second argument